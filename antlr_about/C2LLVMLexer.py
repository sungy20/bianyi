# Generated from C2LLVM.g4 by ANTLR 4.9.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\61")
        buf.write("\u0136\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3")
        buf.write("\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6")
        buf.write("\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r")
        buf.write("\3\r\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20")
        buf.write("\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\22")
        buf.write("\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23")
        buf.write("\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25")
        buf.write("\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30")
        buf.write("\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32")
        buf.write("\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34")
        buf.write("\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36")
        buf.write("\3\37\3\37\3\37\3 \3 \3 \3!\3!\3!\3\"\3\"\3\"\3#\3#\3")
        buf.write("#\3$\3$\3$\3$\3%\3%\3%\3%\3%\3&\3&\3\'\3\'\3(\3(\3)\3")
        buf.write(")\3)\3*\3*\7*\u0100\n*\f*\16*\u0103\13*\3+\6+\u0106\n")
        buf.write("+\r+\16+\u0107\3,\3,\3,\3,\3-\3-\7-\u0110\n-\f-\16-\u0113")
        buf.write("\13-\3-\3-\3.\3.\3.\3.\7.\u011b\n.\f.\16.\u011e\13.\3")
        buf.write(".\3.\3.\3.\3.\3/\3/\3/\3/\7/\u0129\n/\f/\16/\u012c\13")
        buf.write("/\3/\3/\3\60\6\60\u0131\n\60\r\60\16\60\u0132\3\60\3\60")
        buf.write("\4\u0111\u011c\2\61\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n")
        buf.write("\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'")
        buf.write("\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ")
        buf.write("?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61\3\2\7\4\2C\\")
        buf.write("c|\6\2\62;C\\aac|\3\2\62;\4\2\f\f\17\17\5\2\13\f\17\17")
        buf.write("\"\"\2\u013b\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3")
        buf.write("\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2")
        buf.write("\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2")
        buf.write("\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2")
        buf.write("#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2")
        buf.write("\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65")
        buf.write("\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2")
        buf.write("\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2")
        buf.write("\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2")
        buf.write("\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3")
        buf.write("\2\2\2\2]\3\2\2\2\2_\3\2\2\2\3a\3\2\2\2\5j\3\2\2\2\7l")
        buf.write("\3\2\2\2\tn\3\2\2\2\13p\3\2\2\2\rw\3\2\2\2\17y\3\2\2\2")
        buf.write("\21{\3\2\2\2\23}\3\2\2\2\25\177\3\2\2\2\27\u0081\3\2\2")
        buf.write("\2\31\u0083\3\2\2\2\33\u0085\3\2\2\2\35\u0087\3\2\2\2")
        buf.write("\37\u008d\3\2\2\2!\u0094\3\2\2\2#\u0099\3\2\2\2%\u00a2")
        buf.write("\3\2\2\2\'\u00a8\3\2\2\2)\u00af\3\2\2\2+\u00b1\3\2\2\2")
        buf.write("-\u00b3\3\2\2\2/\u00b5\3\2\2\2\61\u00bc\3\2\2\2\63\u00c3")
        buf.write("\3\2\2\2\65\u00c6\3\2\2\2\67\u00cc\3\2\2\29\u00d1\3\2")
        buf.write("\2\2;\u00d9\3\2\2\2=\u00dc\3\2\2\2?\u00df\3\2\2\2A\u00e2")
        buf.write("\3\2\2\2C\u00e5\3\2\2\2E\u00e8\3\2\2\2G\u00eb\3\2\2\2")
        buf.write("I\u00ef\3\2\2\2K\u00f4\3\2\2\2M\u00f6\3\2\2\2O\u00f8\3")
        buf.write("\2\2\2Q\u00fa\3\2\2\2S\u00fd\3\2\2\2U\u0105\3\2\2\2W\u0109")
        buf.write("\3\2\2\2Y\u010d\3\2\2\2[\u0116\3\2\2\2]\u0124\3\2\2\2")
        buf.write("_\u0130\3\2\2\2ab\7%\2\2bc\7k\2\2cd\7p\2\2de\7e\2\2ef")
        buf.write("\7n\2\2fg\7w\2\2gh\7f\2\2hi\7g\2\2i\4\3\2\2\2jk\7>\2\2")
        buf.write("k\6\3\2\2\2lm\7\60\2\2m\b\3\2\2\2no\7@\2\2o\n\3\2\2\2")
        buf.write("pq\7u\2\2qr\7v\2\2rs\7t\2\2st\7w\2\2tu\7e\2\2uv\7v\2\2")
        buf.write("v\f\3\2\2\2wx\7}\2\2x\16\3\2\2\2yz\7\177\2\2z\20\3\2\2")
        buf.write("\2{|\7=\2\2|\22\3\2\2\2}~\7*\2\2~\24\3\2\2\2\177\u0080")
        buf.write("\7+\2\2\u0080\26\3\2\2\2\u0081\u0082\7.\2\2\u0082\30\3")
        buf.write("\2\2\2\u0083\u0084\7,\2\2\u0084\32\3\2\2\2\u0085\u0086")
        buf.write("\7?\2\2\u0086\34\3\2\2\2\u0087\u0088\7d\2\2\u0088\u0089")
        buf.write("\7t\2\2\u0089\u008a\7g\2\2\u008a\u008b\7c\2\2\u008b\u008c")
        buf.write("\7m\2\2\u008c\36\3\2\2\2\u008d\u008e\7t\2\2\u008e\u008f")
        buf.write("\7g\2\2\u008f\u0090\7v\2\2\u0090\u0091\7w\2\2\u0091\u0092")
        buf.write("\7t\2\2\u0092\u0093\7p\2\2\u0093 \3\2\2\2\u0094\u0095")
        buf.write("\7h\2\2\u0095\u0096\7t\2\2\u0096\u0097\7g\2\2\u0097\u0098")
        buf.write("\7g\2\2\u0098\"\3\2\2\2\u0099\u009a\7e\2\2\u009a\u009b")
        buf.write("\7q\2\2\u009b\u009c\7p\2\2\u009c\u009d\7v\2\2\u009d\u009e")
        buf.write("\7k\2\2\u009e\u009f\7p\2\2\u009f\u00a0\7w\2\2\u00a0\u00a1")
        buf.write("\7g\2\2\u00a1$\3\2\2\2\u00a2\u00a3\7u\2\2\u00a3\u00a4")
        buf.write("\7e\2\2\u00a4\u00a5\7c\2\2\u00a5\u00a6\7p\2\2\u00a6\u00a7")
        buf.write("\7h\2\2\u00a7&\3\2\2\2\u00a8\u00a9\7r\2\2\u00a9\u00aa")
        buf.write("\7t\2\2\u00aa\u00ab\7k\2\2\u00ab\u00ac\7p\2\2\u00ac\u00ad")
        buf.write("\7v\2\2\u00ad\u00ae\7h\2\2\u00ae(\3\2\2\2\u00af\u00b0")
        buf.write("\7(\2\2\u00b0*\3\2\2\2\u00b1\u00b2\7]\2\2\u00b2,\3\2\2")
        buf.write("\2\u00b3\u00b4\7_\2\2\u00b4.\3\2\2\2\u00b5\u00b6\7o\2")
        buf.write("\2\u00b6\u00b7\7c\2\2\u00b7\u00b8\7n\2\2\u00b8\u00b9\7")
        buf.write("n\2\2\u00b9\u00ba\7q\2\2\u00ba\u00bb\7e\2\2\u00bb\60\3")
        buf.write("\2\2\2\u00bc\u00bd\7u\2\2\u00bd\u00be\7k\2\2\u00be\u00bf")
        buf.write("\7|\2\2\u00bf\u00c0\7g\2\2\u00c0\u00c1\7q\2\2\u00c1\u00c2")
        buf.write("\7h\2\2\u00c2\62\3\2\2\2\u00c3\u00c4\7k\2\2\u00c4\u00c5")
        buf.write("\7h\2\2\u00c5\64\3\2\2\2\u00c6\u00c7\7y\2\2\u00c7\u00c8")
        buf.write("\7j\2\2\u00c8\u00c9\7k\2\2\u00c9\u00ca\7n\2\2\u00ca\u00cb")
        buf.write("\7g\2\2\u00cb\66\3\2\2\2\u00cc\u00cd\7g\2\2\u00cd\u00ce")
        buf.write("\7n\2\2\u00ce\u00cf\7u\2\2\u00cf\u00d0\7g\2\2\u00d08\3")
        buf.write("\2\2\2\u00d1\u00d2\7g\2\2\u00d2\u00d3\7n\2\2\u00d3\u00d4")
        buf.write("\7u\2\2\u00d4\u00d5\7g\2\2\u00d5\u00d6\7\"\2\2\u00d6\u00d7")
        buf.write("\7k\2\2\u00d7\u00d8\7h\2\2\u00d8:\3\2\2\2\u00d9\u00da")
        buf.write("\7(\2\2\u00da\u00db\7(\2\2\u00db<\3\2\2\2\u00dc\u00dd")
        buf.write("\7~\2\2\u00dd\u00de\7~\2\2\u00de>\3\2\2\2\u00df\u00e0")
        buf.write("\7?\2\2\u00e0\u00e1\7?\2\2\u00e1@\3\2\2\2\u00e2\u00e3")
        buf.write("\7#\2\2\u00e3\u00e4\7?\2\2\u00e4B\3\2\2\2\u00e5\u00e6")
        buf.write("\7@\2\2\u00e6\u00e7\7?\2\2\u00e7D\3\2\2\2\u00e8\u00e9")
        buf.write("\7>\2\2\u00e9\u00ea\7?\2\2\u00eaF\3\2\2\2\u00eb\u00ec")
        buf.write("\7k\2\2\u00ec\u00ed\7p\2\2\u00ed\u00ee\7v\2\2\u00eeH\3")
        buf.write("\2\2\2\u00ef\u00f0\7e\2\2\u00f0\u00f1\7j\2\2\u00f1\u00f2")
        buf.write("\7c\2\2\u00f2\u00f3\7t\2\2\u00f3J\3\2\2\2\u00f4\u00f5")
        buf.write("\7-\2\2\u00f5L\3\2\2\2\u00f6\u00f7\7/\2\2\u00f7N\3\2\2")
        buf.write("\2\u00f8\u00f9\7\61\2\2\u00f9P\3\2\2\2\u00fa\u00fb\7/")
        buf.write("\2\2\u00fb\u00fc\7@\2\2\u00fcR\3\2\2\2\u00fd\u0101\t\2")
        buf.write("\2\2\u00fe\u0100\t\3\2\2\u00ff\u00fe\3\2\2\2\u0100\u0103")
        buf.write("\3\2\2\2\u0101\u00ff\3\2\2\2\u0101\u0102\3\2\2\2\u0102")
        buf.write("T\3\2\2\2\u0103\u0101\3\2\2\2\u0104\u0106\t\4\2\2\u0105")
        buf.write("\u0104\3\2\2\2\u0106\u0107\3\2\2\2\u0107\u0105\3\2\2\2")
        buf.write("\u0107\u0108\3\2\2\2\u0108V\3\2\2\2\u0109\u010a\7)\2\2")
        buf.write("\u010a\u010b\13\2\2\2\u010b\u010c\7)\2\2\u010cX\3\2\2")
        buf.write("\2\u010d\u0111\7$\2\2\u010e\u0110\13\2\2\2\u010f\u010e")
        buf.write("\3\2\2\2\u0110\u0113\3\2\2\2\u0111\u0112\3\2\2\2\u0111")
        buf.write("\u010f\3\2\2\2\u0112\u0114\3\2\2\2\u0113\u0111\3\2\2\2")
        buf.write("\u0114\u0115\7$\2\2\u0115Z\3\2\2\2\u0116\u0117\7\61\2")
        buf.write("\2\u0117\u0118\7,\2\2\u0118\u011c\3\2\2\2\u0119\u011b")
        buf.write("\13\2\2\2\u011a\u0119\3\2\2\2\u011b\u011e\3\2\2\2\u011c")
        buf.write("\u011d\3\2\2\2\u011c\u011a\3\2\2\2\u011d\u011f\3\2\2\2")
        buf.write("\u011e\u011c\3\2\2\2\u011f\u0120\7,\2\2\u0120\u0121\7")
        buf.write("\61\2\2\u0121\u0122\3\2\2\2\u0122\u0123\b.\2\2\u0123\\")
        buf.write("\3\2\2\2\u0124\u0125\7\61\2\2\u0125\u0126\7\61\2\2\u0126")
        buf.write("\u012a\3\2\2\2\u0127\u0129\n\5\2\2\u0128\u0127\3\2\2\2")
        buf.write("\u0129\u012c\3\2\2\2\u012a\u0128\3\2\2\2\u012a\u012b\3")
        buf.write("\2\2\2\u012b\u012d\3\2\2\2\u012c\u012a\3\2\2\2\u012d\u012e")
        buf.write("\b/\2\2\u012e^\3\2\2\2\u012f\u0131\t\6\2\2\u0130\u012f")
        buf.write("\3\2\2\2\u0131\u0132\3\2\2\2\u0132\u0130\3\2\2\2\u0132")
        buf.write("\u0133\3\2\2\2\u0133\u0134\3\2\2\2\u0134\u0135\b\60\2")
        buf.write("\2\u0135`\3\2\2\2\t\2\u0101\u0107\u0111\u011c\u012a\u0132")
        buf.write("\3\b\2\2")
        return buf.getvalue()


class C2LLVMLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    StrVar = 41
    INT = 42
    CHAR = 43
    STRING = 44
    Comment = 45
    LineComment = 46
    WS = 47

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'#include'", "'<'", "'.'", "'>'", "'struct'", "'{'", "'}'", 
            "';'", "'('", "')'", "','", "'*'", "'='", "'break'", "'return'", 
            "'free'", "'continue'", "'scanf'", "'printf'", "'&'", "'['", 
            "']'", "'malloc'", "'sizeof'", "'if'", "'while'", "'else'", 
            "'else if'", "'&&'", "'||'", "'=='", "'!='", "'>='", "'<='", 
            "'int'", "'char'", "'+'", "'-'", "'/'", "'->'" ]

    symbolicNames = [ "<INVALID>",
            "StrVar", "INT", "CHAR", "STRING", "Comment", "LineComment", 
            "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "StrVar", "INT", "CHAR", "STRING", "Comment", 
                  "LineComment", "WS" ]

    grammarFileName = "C2LLVM.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


